#!/bin/bash

FILTER_arm="|(driver/xf86-input-vmmouse)|(driver/xf86-video-intel)";
FILTER_arm64="|(driver/xf86-input-vmmouse)|(driver/xf86-video-intel)|(data/cursors)|(font/)";
FILTER_mips="|(driver/xf86-input-vmmouse)|(driver/xf86-video-intel)";
FILTER_mips64="|(driver/xf86-input-vmmouse)|(driver/xf86-video-intel)|(libevdev)|(driver/xf86-input-synaptics)|(driver/xf86-input-evdev)";
FILTER_powerpc="|(driver/xf86-input-vmmouse)|(driver/xf86-video-intel)";
FILTER_powerpc64="|(driver/xf86-input-vmmouse)|(driver/xf86-video-intel)";
FILTER_cyg32="|(lib/libpciaccess)|(app/sessreg)";
FILTER_i686="|(driver/xf86-video-v4l)|(driver/xf86-video-xgixp)|(driver/xf86-video-cirrus)|(driver/xf86-video-s3virge)|(driver/xf86-video-siliconmotion)|(driver/xf86-video-voodoo)";
FILTER_x86_64="|(driver/xf86-video-v4l)|(driver/xf86-video-xgixp)|(driver/xf86-video-cirrus)|(driver/xf86-video-s3virge)|(driver/xf86-video-siliconmotion)|(driver/xf86-video-voodoo)";
FILTER_x86_32="|(driver/xf86-video-v4l)|(driver/xf86-video-xgixp)|(driver/xf86-video-cirrus)|(driver/xf86-video-s3virge)|(driver/xf86-video-siliconmotion)|(driver/xf86-video-voodoo)";

FILT=FILTER_${1}
FILTER=${!FILT}

OPT_mips="--disable-loongson-mmi";
OPT_arm="--disable-arm-iwmmxt --disable-arm-iwmmxt2 --disable-int10-module";
# --disable-arm-simd --disable-arm-neon";

AOPT=OPT_${1}
ARCHOPT=${!AOPT}

sync_fin() {
  #LD Cache
  if [ ! -d ${DESTDIR}/etc/ld.so.conf.d ];then
    mkdir -p ${DESTDIR}/etc/ld.so.conf.d
  fi;
  echo "${PREFIX}/${B_LIBDIRS}" > ${DESTDIR}/etc/ld.so.conf.d/xwin_${BARCH}.conf

#  if [ "${NARCH}" == "${BARCH}" ] && [ ! -h ${ARCHROOT}/${NARCH} ];then
#    rsync -a ${DESTDIR}/ /
#  fi;

  #Clean up failed pkg
  if [ "${2}" ] && [ "${2}" == "1" ];then
#    for pkgfail in `awk -F: '$1 == "FAIL" {printf "%s\n",substr($2,2)}' ${1}.done`;do
#      if [ -e ${pkgfail}/Makefile ];then
#        make -C ${pkgfail} clean distclean
#      fi;
#      if [ -e ${pkgfail}/config.log ];then
#        rm ${pkgfail}/config.log
#      fi;
#    done;
    exit ${2}
  fi;

  if [ -h ${SYSROOT}/${PREFIX} ];then
    rm ${SYSROOT}/${PREFIX}
  fi;

  exit 0
}

NARCH=`uname -m`

export BARCH=${1}
export DESTDIR=${3}
export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${DESTDIR}${PREFIX}/${B_LIBDIRS}/pkgconfig
export DPATH=${DESTDIR}${PREFIX}
export MAKEFLAGS=${MAKE_J}

export ACLOCAL="aclocal-1.11";
export AUTOMAKE="automake-1.11";

#export LD_LIBRARY_PATH=/usr/${B_LIBDIRS}:/${B_LIBDIRS}:${SYSROOT}/${B_LIBDIRS}:${SYSROOT}/usr/${B_LIBDIRS}:${SYSROOT}/${PREFIX}/${B_LIBDIRS}

if [ ! -d ./util/modular ];then
  git clone git://anongit.freedesktop.org/git/xorg/util/modular util/modular
fi;

if [ "${4}" ];then
  ./util/modular/build.sh -L |awk '{printf "if [ -e %s/Makefile ];then make -C %s distclean;fi\n",$1, $1}' |sh
  rm ${1}.tobuild ${1}.done
  touch ${1}.done
  rm -rf ${3}
fi;

if [ ! -d ${SYSROOT}/${PREFIX}/${B_LIBDIRS} ];then
  if [ ! -d ${3}/${PREFIX} ];then
    mkdir -p ${3}/${PREFIX}
  fi;
  if [ -d ${SYSROOT}/${PREFIX} ];then
    rm -rf ${SYSROOT}/${PREFIX}
  fi;
  ln -sr ${3}/${PREFIX}  ${SYSROOT}/${PREFIX}
  if [ ! -d ${3}/${PREFIX}/include ];then
    mkdir -p ${3}/${PREFIX}/include
  fi;
fi;

(for pkg in `./util/modular/build.sh -L |grep -vE "(^driver/xf86-video-newport)|(^driver/xf86-video-sis)|(^mesa)|(^app/xfs)|(^driver/xf86-video-vmware)${FILTER}"`;do
  echo ${pkg};
done) > ${1}.tobuild

if [ "${NARCH}" == "x86_64" ];then
  case ${1} in
    i686|x86_32|x86_64)BUILD=${2};;
  esac;
fi;

if [ ! -d ${DPATH} ];then
  mkdir -p ${DPATH}
fi;

export CC_FOR_BUILD=gcc
export CXX_FOR_BUILD=g++
export CFLAGS="${CFLAGS} -I=/usr/${B_LIBDIRS}/glib-2.0/include -I${DESTDIR}/${PREFIX}/include"
export LDFLAGS="${LDFLAGS} -L${DESTDIR}/${PREFIX}/${B_LIBDIRS}"
TRPREFIX=$(echo ${PREFIX} |tr '/' '_')
CONFFLAGS="--host=${2} --build=${BUILD} --with-sysroot --libdir=${PREFIX}/${B_LIBDIRS} --disable-selective-werror ${ARCHOPT}
           ac_cv_file__dev_urandom=yes --with-utmp-file=/var/run/utmp --with-wtmp-file=/var/log/wtmp
           ac_cv_file_${TRPREFIX}_include_xorg_dri_h=yes ac_cv_file_${TRPREFIX}_include_xorg_sarea_h=yes
           ac_cv_file_${TRPREFIX}_include_xorg_dristruct_h=yes ac_cv_file_${TRPREFIX}_include_xorg_damage_h=yes
           xorg_cv_malloc0_returns_null=yes --sysconfdir=/etc --localstatedir=/var"

if [ "${NARCH}" != "${1}" ];then
  CONFFLAGS="${CONFFLAGS} MKFONTDIR=${PREFIX}/bin/mkfontdir MKFONTSCALE=${PREFIX}/bin/mkfontscale UCS2ANY=${PREFIX}/bin/ucs2any 
             BDFTOPCF=${PREFIX}/bin/bdftopcf XCURSORGEN=${PREFIX}/bin/xcursorgen";
fi;
export CONFFLAGS

export CFLAGS_FOR_BUILD="-I. -I=/usr/${B_LIBDIRS}/glib-2.0/include"
export LDFLAGS_FOR_BUILD=-L.
export MANCONF="/etc/man.conf";

touch ${PREFIX}/include/mibstore.h

./util/modular/build.sh --clone --autoresume ./${1}.done --modfile ./${1}.tobuild ${PREFIX} || sync_fin ${3} 1

if [ -e ${PREFIX}/include/mibstore.h ] && [ ! -s ${PREFIX}/include/mibstore.h ];then
  rm ${PREFIX}/include/mibstore.h
fi;

sync_fin ${SYSROOT} 0
