#!/bin/bash

FILTER_arm="|(driver/xf86-input-vmmouse)|(driver/xf86-video-intel)";
FILTER_arm64="|(driver/xf86-input-vmmouse)|(driver/xf86-video-intel)|(data/cursors)|(font/)";
FILTER_mips="|(driver/xf86-input-vmmouse)|(driver/xf86-video-intel)";

FILT=FILTER_${1}
FILTER=${!FILT}

OPT_mips="--disable-loongson-mmi";
AOPT=OPT_${1}
ARCHOP=${!AOPT}

sync_fin() {
  if [ ! -d ${1}/${PREFIX} ];then
    mkdir -p ${1}/${PREFIX}
  fi;

  #LD Cache
  if [ ! -d ${3}/etc/ld.so.conf.d ];then
    mkdir -p ${3}/etc/ld.so.conf.d
  fi;
  echo "/usr/X11R7/${B_LIBDIRS}" > ${3}/etc/ld.so.conf.d/xwin.conf

  if [ "${NARCH}" == "${BARCH}" ];then
    rsync -a ${DESTDIR}${PREFIX}/ /${PREFIX}/
  fi;

  #Clean up failed pkg
  if [ "${2}" ] && [ "${2}" == "1" ];then
    for pkgfail in `awk -F: '$1 == "FAIL" {printf "%s\n",substr($2,2)}' ${1}.done`;do
      if [ -e ${pkgfail}/Makefile ];then
        make -C ${pkgfail} clean distclean
      fi;
      if [ -e ${pkgfail}/config.log ];then
        rm ${pkgfail}/config.log
      fi;
    done;
  fi;

  exit ${2}
}

NARCH=`uname -m`

export BARCH=${1}
export PREFIX=/usr/X11R7
export DESTDIR=/build/${1}
export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${DESTDIR}${PREFIX}/${B_LIBDIRS}/pkgconfig
export DPATH=${DESTDIR}${PREFIX}
export MAKEFLAGS=${MAKE_J}

export ACLOCAL="aclocal-1.11";
export AUTOMAKE="automake-1.11";

export LD_LIBRARY_PATH=/usr/${B_LIBDIRS}:/${B_LIBDIRS}:${SYSROOT}/${B_LIBDIRS}:${SYSROOT}/usr/${B_LIBDIRS}:${SYSROOT}/${PREFIX}/${B_LIBDIRS}

if [ ! -d ./util/modular ];then
  git clone git://anongit.freedesktop.org/git/xorg/util/modular util/modular
fi;

if [ "${4}" ];then
  ./util/modular/build.sh -L |awk '{printf "if [ -e %s/Makefile ];then make -C %s distclean;fi\n",$1, $1}' |sh
  rm ${1}.tobuild ${1}.done
  touch ${1}.done
fi;

(for pkg in `./util/modular/build.sh -L |grep -vE "(^driver/xf86-video-newport)|(^driver/xf86-video-sis)|(^mesa)${FILTER}"`;do
  echo ${pkg};
done) > ${1}.tobuild

if [ "${NARCH}" == "x86_64" ];then
  case ${1} in
    i686|x86_32|x86_64)BUILD=${2};;
  esac;
fi;

if [ ! -d ${DPATH} ];then
  mkdir -p ${DPATH}
fi;

export CC_FOR_BUILD=gcc
export CXX_FOR_BUILD=g++
CONFFLAGS="--host=${2} --build=${BUILD} --with-sysroot --libdir=${PREFIX}/${B_LIBDIRS} --disable-selective-werror 
           ac_cv_file__dev_urandom=yes --with-utmp-file=/var/run/utmp --with-wtmp-file=/var/log/wtmp
           ac_cv_file__usr_X11R7_include_xorg_dri_h=yes ac_cv_file__usr_X11R7_include_xorg_sarea_h=yes
           ac_cv_file__usr_X11R7_include_xorg_dristruct_h=yes ac_cv_file__usr_X11R7_include_xorg_damage_h=yes"

if [ "${NARCH}" != "${1}" ];then
  CONFFLAGS="${CONFFLAGS} MKFONTDIR=/usr/X11R7/bin/mkfontdir MKFONTSCALE=/usr/X11R7/bin/mkfontscale";
fi;
export CONFFLAGS

export CFLAGS_FOR_BUILD=-I.
export LDFLAGS_FOR_BUILD=-L.
export MANCONF="/etc/man.conf";

./util/modular/build.sh --clone --autoresume ./${1}.done --modfile ./${1}.tobuild ${PREFIX} || sync_fin ${3} 1

sync_fin ${3} 0

