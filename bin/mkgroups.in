#!/bin/bash

DTSETCDIR=@sysconfdir@
DEFDIR=${DTSETCDIR}/builddef
RPMDIR=@SRVDIRYUM@

bootstrap_group() {
  for bpkg in bison flex sed gawk bash make coreutils nano rsync grep less gzip tar xz texinfo \
              pkg-config util-linux diffutils libtool gperf m4 cpio git binutils glibc autoconf \
              automake-1.9 apache-ant junit rhino antlr4 gmp mpfr mpc cloog isl zlib gcc mono \
              findutils patch iana-etc tzdata ecj linux_logo dtsbuild ncursesw Python Linux-PAM \
              Xorg autogen db;do
    echo ${bpkg}
  done;
}

generate_groups() {
  for pkg in `ls ${DEFDIR}/`;do
    (. ${DEFDIR}/${pkg}
    if [ ! "${RPMGROUP}" ];then
      RPMGROUP="no-group";
    fi;
    echo ${pkg} >> ${PKGLIST_PTH}/${RPMGROUP})
  done

  bootstrap_group > ${PKGLIST_PTH}/buildroot

  printf "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
  printf "<!DOCTYPE comps PUBLIC \"-//Red Hat, Inc.//DTD Comps info//EN\" \"comps.dtd\"><comps>";

  for pkglist in `ls ${PKGLIST_PTH}/`;do
    SUBPKG="-dev -doc -libs -dbg -locale -conf"
    if [ "${pkglist}" == "java" ];then
      SUBPKG+=" -jre -jdk";
    fi;
    for xpkg in "" ${SUBPKG};do
      printf "<group>";
      printf "<id>%s%s</id>" ${pkglist} ${xpkg};
      printf "<default>False</default>";
      printf "<uservisible>True</uservisible>";
      printf "<display_order>1024</display_order>";
      printf "<name>%s%s</name>" ${pkglist} ${xpkg};
      printf "<description></description>";
      printf "<packagelist>";
      cat ${PKGLIST_PTH}/${pkglist} |sort |uniq | \
      (while read pkg;do
        printf "<packagereq type=\"mandatory\">%s%s</packagereq>" ${pkg} ${xpkg};
      done)

      printf "</packagelist>";
      printf "</group>";
    done;
  done;

  printf "</comps>";
}

PKGLIST_PTH=$( mktemp -p /tmp -d yumrpmpgklist.XXXXXXXXXXX)
GROUP_FILE=$( mktemp -p /tmp yum_groups_XXXXXXXXXXX.xml)

if [ -d ${PKGLIST_PTH} ] && [ -f ${GROUP_FILE} ];then
  generate_groups |xmllint --format  - > ${GROUP_FILE}
  for RPM_MAN in "" "intel/" "intel/i686/" "intel/x86_32/" "intel/x86_64/" \
                 "arm/" "arm/arm/" "arm/armv6/" "arm/arm64/" \
                 "ppc/" "ppc/ppc/" "ppc/ppc64/" "mips/" "mips/mips/" "mips/mips64/";do
    if [ -d ${RPMDIR}/${RPM_MAN}repodata ];then
      cp ${GROUP_FILE} ${RPMDIR}/${RPM_MAN}repodata/groups.xml
      createrepo -g repodata/groups.xml --update ${RPMDIR}/${RPM_MAN}
     else
      mkdir -p ${RPMDIR}/${RPM_MAN}repodata
      cp ${GROUP_FILE} ${RPMDIR}/${RPM_MAN}repodata/groups.xml
      createrepo -g repodata/groups.xml ${RPMDIR}/${RPM_MAN}
    fi;
  done;
  yum clean metadata
  if [ -d /var/spool/samba/ftp/repo ];then
    rsync -aP --delete ${RPMDIR}/ /var/spool/samba/ftp/repo/
  fi;
fi;

if [ -d ${PKGLIST_PTH} ];then
  rm -rf ${PKGLIST_PTH}
fi;

if [ -f ${GROUP_FILE} ];then
  rm ${GROUP_FILE}
fi;
